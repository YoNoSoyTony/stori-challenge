name: CI/CD Frontend

on:
  push:
    branches: [ main ]
  pull_request:
    branches: [ main ]

jobs:
  build:
    runs-on: ubuntu-latest
    
    steps:
      - name: Checkout code
        uses: actions/checkout@v4

      - name: Setup Node.js
        uses: actions/setup-node@v4
        with:
          node-version: '20'

      - name: Install dependencies
        working-directory: frontend
        run: npm install  

      - name: Build frontend
        working-directory: frontend
        run: npm run build  

      - name: Upload Build Artifacts
        uses: actions/upload-artifact@v4
        with:
          name: frontend-build
          path: frontend/dist/ 

  setup-cloudfront:
    runs-on: ubuntu-latest
    steps:
      - name: Checkout code
        uses: actions/checkout@v4

      - name: Configure AWScredentials
        uses: aws-actions/configure-aws-credentials@v1
        with:
          aws-access-key-id: ${{ secrets.AWS_ACCESS_KEY_ID }}
          aws-secret-access-key: ${{ secrets.AWS_SECRET_ACCESS_KEY }}
          aws-region: us-east-1

      - name: Check for Existing CloudFront Distribution
        id: check-distribution
        run: |
          DISTRIBUTION_ID=$(aws cloudfront list-distributions | jq -r '.DistributionList.Items[] | select(.Origins.Items[].DomainName == "s3-origin-domain.com") | .Id')
          echo "::set-output name=DISTRIBUTION_ID::$DISTRIBUTION_ID"  # Important!

      - name: Create CloudFront Distribution (if needed)
        if: ${{ steps.check-distribution.outputs.DISTRIBUTION_ID == '' }}
        run: |
          aws cloudfront create-distribution --distribution-config file://distribution-config.json 

  deploy:
    runs-on: ubuntu-latest
    needs: build

    steps:
      - name: Download Build Artifacts 
        uses: actions/download-artifact@v4
        with:
          name: frontend-build
          path: frontend/dist/

      - name: Configure AWS credentials
        uses: aws-actions/configure-aws-credentials@v1
        with:
          aws-access-key-id: ${{ secrets.AWS_ACCESS_KEY_ID }}
          aws-secret-access-key: ${{ secrets.AWS_SECRET_ACCESS_KEY }}
          aws-region: us-east-1  

      - name: Sync files to S3
        run: aws s3 sync ./frontend/dist/ s3://stori-challenge-frontend --delete 

      - name: Invalidate CloudFront (Optional)
        if: ${{ steps.setup-cloudfront.outputs.DISTRIBUTION_ID }}  # Conditional invalidation
        run: aws cloudfront create-invalidation --distribution-id ${{ steps.setup-cloudfront.outputs.DISTRIBUTION_ID }} --paths "/*" 

